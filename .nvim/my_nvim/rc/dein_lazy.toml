# --------------------------------------
# Edit
#
[[plugins]]
repo = 'tyru/caw.vim'
on_event = ['BufNewFile', 'BufRead']

# --------------------------------------
# Markdown
#
[[plugins]]
repo = 'preservim/vim-markdown'
if = 0
on_ft = ['markdown']
hook_source = '''
let g:tex_conceal = ""
let g:vim_markdown_conceal = 0
let g:vim_markdown_conceal_code_blocks = 0
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_frontmatter = 1
let g:vim_markdown_math = 1
let g:vim_markdown_no_default_key_mappings = 1
let g:vim_markdown_strikethrough = 1
'''

[[plugins]]
repo = 'godlygeek/tabular'
if = 0
on_source = ['vim-markdown']

# --------------------------------------
# LSP/Linter/Formatter
#
[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_event = ['BufNewFile', 'BufRead']
lua_source = '''
-- https://github.com/neovim/nvim-lspconfig#suggested-configuration
local opts = {noremap=true, silent=true}
vim.keymap.set('n', '<C-k>', vim.lsp.buf.signature_help, opts)
vim.keymap.set('n', '<space>dc', vim.lsp.buf.declaration, opts)
vim.keymap.set('n', '<space>de', vim.diagnostic.open_float, opts)
vim.keymap.set('n', '<space>df', vim.lsp.buf.definition, opts)
vim.keymap.set('n', '<space>dq', vim.diagnostic.setloclist, opts)
-- vim.keymap.set('n', '[d', vim.diagnostic.goto_prev, opts)
-- vim.keymap.set('n', ']d', vim.diagnostic.goto_next, opts)

require("lspconfig")["pylsp"].setup()
'''

[[plugins]]
repo = 'jose-elias-alvarez/null-ls.nvim'
on_event = ['BufNewFile', 'BufRead']
lua_source = '''
local null_ls = require("null-ls")

local null_sources = {}
table.insert(null_sources, null_ls.builtins.diagnostics["hadolint"])
table.insert(null_sources, null_ls.builtins.diagnostics["markdownlint"])
table.insert(null_sources, null_ls.builtins.diagnostics["shellcheck"])

null_ls.setup({
  sources = null_sources,
})
'''

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
on_source = ['null-ls.nvim']
