" https://rbtnn.hateblo.jp/entry/2014/11/30/174749
set encoding=utf-8
scriptencoding utf-8

filetype off
filetype plugin indent off
syntax off


" --------------------------------------
" Variable
"
let g:auto_reload = timer_start(
  \   1000,
  \   {-> execute('silent! checktime')},
  \   {'repeat': -1}
  \ )
let g:markdown_recommended_style = 0
let g:netrw_banner = 0
let g:netrw_dirhistmax = 1
let g:netrw_hide = 0
let g:netrw_home = expand('~/.vim')
let g:netrw_liststyle = 0
let g:vim_indent_cont = 0


" --------------------------------------
" Option
"
" System
if has('unix')
  language messages C
else
  language messages en
endif
if has('unix')
  set clipboard&
  set clipboard^=unnamedplus
endif
set autoread
set belloff=all
set nobackup
set noswapfile
set noundofile
set nowritebackup

" Edit
" set binary noeol
" set isfname-=|
if has('patch-8.2.0860')
  set nrformats=unsigned
else
  set nrformats=
endif
set backspace=indent,eol,start
set fileencodings=utf-8,euc-jp,cp932
set fileformat=unix
set fileformats=unix,dos,mac
set hidden
set virtualedit=block

" Search
if executable('rg')
  let &grepprg = 'rg --vimgrep --no-heading'
  set grepformat=%f:%l:%c:%m
endif
set hlsearch
set ignorecase
set incsearch
set shortmess+=S
set smartcase
set wrapscan

" View
set ambiwidth=double
set number

" Window
set noequalalways
set pumheight=10
set splitbelow
set splitright
set wildmenu wildmode=list:longest

" CommandLine
set cmdheight=1
set noshowcmd

" StatusLine
" set fillchars+=stl:\ ,stlnc:\_
set laststatus=2
set noshowmode

" TabLine
set showtabline=2

" Highlight
set colorcolumn=80
set cursorline
set showmatch matchtime=1 matchpairs+=\<:\>
" space:\\u2423,extends:\\u00BB,precedes:\\u00AB
set list listchars=space:␣,tab:>-,trail:~,nbsp:%,extends:»,precedes:«
if &diff
  set nospell
else
  set spelllang+=cjk spell
endif

" Color
" if has('termguicolors')
"   set termguicolors
" endif

" Abbreviation
" :w' --> :w
cnoreabbrev w' w


" --------------------------------------
" Keymap
"
nnoremap <silent> j gj
nnoremap <silent> k gk
vnoremap <silent> j gj
vnoremap <silent> k gk

" Insert Mode
" i_CTRL-T Insert one indent
" i_CTRL-D Delete one indent
inoremap ,date <C-r>=strftime('%Y-%m-%d')<CR>

" QuickFix
nnoremap <silent> <C-n> :<C-u>cnext<CR>
nnoremap <silent> <C-p> :<C-u>cprevious<CR>

" Resize Window
nnoremap <silent> <S-Down>  <C-w>1-
nnoremap <silent> <S-Up>    <C-w>1+
nnoremap <silent> <S-Right> <C-w>10>
nnoremap <silent> <S-Left>  <C-w>10<

" https://lambdalisue.hatenablog.com/entry/2015/12/25/000046
" Switch
nnoremap <Plug>(my-switch) <Nop>
nmap <Space>s <Plug>(my-switch)
nnoremap <silent> <Plug>(my-switch)b :<C-u>setlocal scrollbind! scrollbind?<CR>
nnoremap <silent> <Plug>(my-switch)n :<C-u>setlocal number! number?<CR>
nnoremap <silent> <Plug>(my-switch)p :<C-u>setlocal paste! paste?<CR>
nnoremap <silent> <Plug>(my-switch)r :<C-u>setlocal relativenumber! relativenumber?<CR>
nnoremap <silent> <Plug>(my-switch)s :<C-u>setlocal spell! spell?<CR>
nnoremap <silent> <Plug>(my-switch)t :<C-u>setlocal expandtab! expandtab?<CR>
nnoremap <silent> <Plug>(my-switch)w :<C-u>setlocal wrap! wrap?<CR>

" Edit
nnoremap <Plug>(my-edit) <Nop>
nmap <Space>e <Plug>(my-edit)
nnoremap <silent> <Plug>(my-edit)ec :<C-u>edit ++encoding=cp932<CR>
nnoremap <silent> <Plug>(my-edit)ee :<C-u>edit ++encoding=euc-jp<CR>
nnoremap <silent> <Plug>(my-edit)eu :<C-u>edit ++encoding=utf-8<CR>
nnoremap <silent> <Plug>(my-edit)fc :<C-u>setlocal fileencoding=cp932<CR>
nnoremap <silent> <Plug>(my-edit)fe :<C-u>setlocal fileencoding=euc-jp<CR>
nnoremap <silent> <Plug>(my-edit)fu :<C-u>setlocal fileencoding=utf-8<CR>
nnoremap <silent> <Plug>(my-edit)ld :<C-u>edit ++fileformat=dos<CR>
nnoremap <silent> <Plug>(my-edit)lu :<C-u>edit ++fileformat=unix<CR>
nnoremap <silent> <Plug>(my-edit)t  :<C-u>%s/\s\+$//e<CR>
nnoremap <silent> <Plug>(my-edit)v  :<C-u>execute 'edit' $MYVIMRC<CR>

" Filer
nnoremap <Plug>(my-filer) <Nop>
nmap <Space>f <Plug>(my-filer)
nnoremap <silent> <Plug>(my-filer)b :<C-u>execute 'edit' g:my_bookmark_path<CR>
nnoremap <silent> <Plug>(my-filer)g :<C-u>execute 'edit' g:my_gtd_path<CR>
nnoremap <silent> <Plug>(my-filer)o :<C-u>execute '15Lexplore' expand('%:p:h')<CR>
nnoremap <silent> <Plug>(my-filer)c :<C-u>15Lexplore<CR>


" --------------------------------------
" Command
"
function s:copy2clip(...) abort
  if a:0 >= 1
    let @+ = getreg(a:1)
  else
    let @+ = @"
  endif
endfunction
command! -nargs=? C call s:copy2clip(<q-args>)

function s:copy2clip_win(...) abort
  if a:0 >= 1
    call system('clip.exe', system('nkf -sc', getreg(a:1)))
  else
    call system('clip.exe', system('nkf -sc', @"))
  endif
endfunction
command! -nargs=? CW call s:copy2clip_win(<q-args>)


" --------------------------------------
" Aucocommand
"
function! s:my_filetype() abort
  if empty(&filetype)
    return
  endif

  setlocal nofoldenable autoindent expandtab
  setlocal shiftwidth=4 softtabstop=4 tabstop=4

  if index([
    \   'css',
    \   'markdown',
    \   'mermaid',
    \   'plantuml',
    \   'sh',
    \   'toml',
    \   'vim',
    \   'yaml',
    \ ], &filetype) >= 0
    setlocal shiftwidth=2 softtabstop=2 tabstop=2
  elseif index([
    \   'go',
    \   'make',
    \ ], &filetype) >= 0
    setlocal noexpandtab
  else
    " Do nothing.
  endif
endfunction

function! s:my_asyncjob_on_save() abort
  if &filetype == 'python'
    let l:ipynb_path = expand('%:p:r') . '.ipynb'
    if executable('jupytext') && filereadable(l:ipynb_path)
      call my_async#jobstart('jupytext --sync ' . l:ipynb_path)
    endif
  elseif &filetype == 'markdown'
    if executable('prettier')
      call my_async#jobstart('prettier --write ' . expand('%:p'))
    endif
  else
    " Do nothing.
  endif
endfunction

augroup VimrcAutocmd
  autocmd!
  " Auto Reload
  autocmd WinEnter * checktime

  " FileType
  autocmd FileType,BufEnter * call s:my_filetype()

  " Asynchrohous Job
  autocmd BufWritePost *.md,*.py call s:my_asyncjob_on_save()
augroup END


" --------------------------------------
" End of setting
"
filetype plugin indent on
syntax enable
if has('termguicolors') && (v:version >= 900 || has('nvim-0.10.0'))
  set termguicolors
endif
if has('patch-9.0.133')
  execute 'colorscheme' get(g:, 'colors_name', 'habamax')
else
  execute 'colorscheme' get(g:, 'colors_name', 'desert')
endif
