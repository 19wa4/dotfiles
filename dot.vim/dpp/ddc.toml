[[plugins]]
repo = 'Shougo/ddc.vim'
on_event = ['InsertEnter']
depends = ['denops.vim']
hook_source = '''
let g:sources_list = [
  \   'around',
  \   'vsnip',
  \   'skkeleton',
  \ ]
call add(g:sources_list, 'lsp')

call ddc#custom#patch_global('ui', 'pum')
call ddc#custom#patch_global('sources', g:sources_list)
call ddc#custom#patch_global('sourceOptions', #{
  \   _: #{
  \     matchers: ['matcher_head'],
  \     sorters: ['sorter_rank'],
  \     converters: ['converter_remove_overlap'],
  \   },
  \ })
call ddc#custom#patch_global('sourceOptions', #{
  \   around: #{
  \     mark: 'around',
  \   },
  \ })
call ddc#custom#patch_global('sourceOptions', #{
  \   vsnip: #{
  \     mark: 'vsnip',
  \   },
  \ })
call ddc#custom#patch_global('sourceOptions', #{
  \   skkeleton: #{
  \     mark: 'skk',
  \     matchers: [],
  \     sorters: [],
  \     converters: [],
  \     isVolatile: v:true,
  \     minAutoCompleteLength: 1,
  \   },
  \ })
call ddc#custom#patch_global('sourceOptions', #{
  \   lsp: #{
  \     mark: 'lsp',
  \     forceCompletionPattern: '\.\w*|:\w*|->\w*',
  \   },
  \ })
call ddc#custom#patch_global('sourceParams', #{
  \   lsp: #{
  \     snippetEngine: denops#callback#register({
  \       body -> vsnip#anonymous(body)
  \     }),
  \     enableResolveItem: v:true,
  \     enableAdditionalTextEdit: v:true,
  \   }
  \ })
call ddc#enable()
'''

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-ui-pum'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/pum.vim'
on_source = ['ddc.vim']
hook_source = '''
inoremap <C-n>  <Cmd>call pum#map#insert_relative(+1)<CR>
inoremap <C-p>  <Cmd>call pum#map#insert_relative(-1)<CR>
inoremap <C-y>  <Cmd>call pum#map#confirm()<CR>
inoremap <C-e>  <Cmd>call pum#map#cancel()<CR>
'''

[[plugins]]
repo = 'vim-skk/skkeleton'
on_source = ['ddc.vim']
hook_source = '''
call skkeleton#config({
  \   'completionRankFile': '~/.skkeleton/rank.json',
  \   'globalDictionaries': [
  \     '~/.skk/SKK-JISYO.L',
  \     '~/.skk/SKK-JISYO.jinmei',
  \   ],
  \ })
imap <C-j> <Plug>(skkeleton-enable)
cmap <C-j> <Plug>(skkeleton-enable)
'''

[[plugins]]
repo = 'uga-rosa/ddc-source-vsnip'
on_source = ['ddc.vim']

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
on_source = ['ddc.vim']
hook_source = '''
let g:vsnip_snippet_dir = $MYVIMRC->expand()->fnamemodify(':h') .. '/vsnip'
let g:vsnip_filetypes = {}
let g:vsnip_filetypes.rmd = ['markdown']
'''

[[plugins]]
repo = 'Shougo/ddc-source-lsp'
on_source = ['ddc.vim']
