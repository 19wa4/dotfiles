[[plugins]]
repo = 'rhysd/vim-healthcheck'
on_event = ['BufNewFile', 'BufReadPost']

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
on_source = ['ddc.vim']
hook_source = '''
call popup_preview#enable()
'''

[[plugins]]
repo = 'Shougo/ddc-source-lsp'
on_source = ['ddc.vim']

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
if = "!has('nvim')"
on_event = ['VimEnter']

[[plugins]]
repo = 'mattn/vim-lsp-settings'
if = "!has('nvim')"
on_source = ['vim-lsp']
hook_source = '''
let g:lsp_auto_enable = 1
let g:lsp_diagnostics_float_cursor = 1
let g:lsp_diagnostics_virtual_text_align = "after"
let g:lsp_diagnostics_virtual_text_enabled = 1
let g:lsp_diagnostics_virtual_text_wrap = "truncate"
let g:lsp_log_file = ''
let g:lsp_settings_enable_suggestions = 0
let g:lsp_settings = {
  \   'pylsp-all': {
  \     'workspace_config': {
  \       'pylsp': {
  \         'configurationSources': ['flake8']
  \       }
  \     }
  \   },
  \   'efm-langserver': {
  \     'disabled': v:false,
  \     'allowlist': ['sh'],
  \   },
  \ }

function! s:my_lsp_highlight() abort
  highlight clear MyLspHighlight
  highlight MyLspHighlight guifg=#808080 cterm=underline gui=underline

  highlight link LspErrorText MyLspHighlight
  highlight link LspHintText MyLspHighlight
  highlight link LspInformationText MyLspHighlight
  highlight link LspWarningText MyLspHighlight
endfunction

augroup MyLspSetting
  autocmd!
  autocmd User lsp_buffer_enabled call s:my_lsp_highlight()
augroup END
'''
